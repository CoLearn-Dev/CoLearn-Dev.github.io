syntax = "proto3";
package dds;

service DDS {
    // Given a key and a value, stores the value string under the key
    rpc StoreString (StoreStringRequest) returns (SuccessBool);
    // Loads a string from the key passed in
    rpc LoadString (LoadStringRequest) returns (LoadStringReply);
    rpc CreateNewUser (CreateNewUserRequest) returns (CreateNewUserReply);
    rpc RefreshToken (RefreshTokenRequest) returns (TokenReply);
    rpc ImportNewUser (ImportNewUserRequest) returns (TokenReply);
    rpc CreateEntry (CreateEntryRequest) returns (SuccessBool);
    rpc ReadEntry (ReadEntryRequest) returns (ReadEntryReply);
    rpc UpdateEntry (UpdateEntryRequest) returns (SuccessBool);
    rpc DeleteEntry (DeleteEntryRequest) returns (SuccessBool);
    rpc ReadKeyList (ReadKeyListRequest) returns (ReadKeyListReply);
    rpc ReadBatch (ReadBatchRequest) returns (ReadBatchReply);
}

message StoreStringRequest {
    // Stores a value string from the key passed in
    string key = 1;
    string value = 2;
}

message LoadStringRequest {
    // Loads a string from the key passed in
    string key = 1;
}

message CreateEntryRequest {
    string key = 1;
    bytes value = 2;
}

message ReadEntryRequest {
    string key = 1;
}

message ReadEntryReply {
    optional bytes value = 1;
}

message ReadKeyListRequest {}

message ReadKeyListReply {
    repeated string keys = 1;
}

message ReadBatchRequest {
    repeated string keys = 1;
}

message ReadBatchReply {
    repeated ReadEntryReply entries = 1;
}

message UpdateEntryRequest {
    string key = 1;
    bytes value = 2;
}

message DeleteEntryRequest {
    string key = 1;
}

message SuccessBool {
    // True iff success
    bool success = 1;
}

message LoadStringReply {
    // Loads a string from the key passed in
    string value = 1;
}

message CreateNewUserRequest {
    // Expire Time
    int64 expire_time = 1;
}

message CreateNewUserReply {
    bytes secret_key = 1;
    bytes public_key = 2;
    string token = 3;
}

message RefreshTokenRequest {
    string token = 1;
    int64 expire_time = 2;
}

message ImportNewUserRequest {
    bytes public_key = 1;
    int64 current_timestamp = 2;
    bytes signature = 3;
    int64 expire_time = 4;
}

message TokenReply {
    string token = 1;
}
